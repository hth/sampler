if (!hasProperty('env')) {
    ext.env = System.env['GRADLE_ENV']
}

println "Building for environment: $env"

ext {
    archiveName = "sampler"
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
    }
}

apply plugin: 'maven-publish'

allprojects {
    group = 'com.sampler'
    apply from: "$rootDir/versioning.gradle"
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        // Detecting annotation processors on the compile classpath is deprecated and Gradle 5.0 will ignore them.
        options.compilerArgs += ["-proc:none"]
    }

    sourceSets {
        test {
            resources.srcDirs = ['src/test/resources']
            java.srcDirs = ['src/test/java']
        }
    }

    idea {
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://repo1.maven.org/maven2/" }
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }

    dependencies {
        implementation "$springGroup:spring-aop:$springVersion"
        implementation "$springGroup:spring-aspects:$springVersion"
        implementation "$springGroup:spring-beans:$springVersion"
        implementation "$springGroup:spring-context:$springVersion"
        implementation "$springGroup:spring-context-support:$springVersion"
        implementation "$springGroup:spring-core:$springVersion"
        implementation "$springGroup:spring-expression:$springVersion"
        implementation "$springGroup:spring-instrument:$springVersion"
        implementation "$springGroup:spring-jms:$springVersion"
        implementation "$springGroup:spring-oxm:$springVersion"
        implementation "$springGroup:spring-test:$springVersion"
        implementation "$springGroup:spring-tx:$springVersion"
        implementation "$springGroup:spring-web:$springVersion"
        implementation "$springGroup:spring-webmvc:$springVersion"

        implementation "$springSecurityGroup:spring-security-aspects:$springSecurityVersion"
        implementation "$springSecurityGroup:spring-security-config:$springSecurityVersion"
        implementation "$springSecurityGroup:spring-security-core:$springSecurityVersion"
        implementation "$springSecurityGroup:spring-security-crypto:$springSecurityVersion"
        implementation "$springSecurityGroup:spring-security-taglibs:$springSecurityVersion"
        implementation "$springSecurityGroup:spring-security-web:$springSecurityVersion"

        implementation "$springDataGroup:spring-data-mongodb:$springDataMongo"
        implementation "$springDataGroup:spring-data-commons:$springDataCommon"
        implementation "org.mongodb:mongo-java-driver:$mongoJavaDriver"
    }
}

project(':service') {
    jar.archiveBaseName = archiveName + '-service'
}

project(':view') {
    apply plugin: 'war'
    jar.archiveBaseName = archiveName + '-view'
    war.archiveBaseName = archiveName + '-view'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile project(':service')

        providedCompile 'javax.servlet:javax.servlet-api:4.0.1'
    }
}

defaultTasks 'clean'
